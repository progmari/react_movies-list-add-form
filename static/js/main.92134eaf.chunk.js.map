{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleInput","event","target","name","value","setState","handleSubmit","preventDefault","trim","newMovie","props","onAdd","this","onSubmit","type","placeholder","onChange","rows","PureComponent","App","moviesFromServer","addMovie","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92134eaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends PureComponent {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n\n    return this.setState(() => ({\n      [name]: value,\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (title.trim() === '') {\n      return;\n    }\n\n    if (description.trim() === '') {\n      return;\n    }\n\n    if (imgUrl.trim() === '') {\n      return;\n    }\n\n    if (imdbUrl.trim() === '') {\n      return;\n    }\n\n    if (imdbId.trim() === '') {\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title Name\"\n          value={title}\n          onChange={(event) => {\n            this.handleInput(event);\n          }}\n        />\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"Image URL\"\n          value={imgUrl}\n          onChange={(event) => {\n            this.handleInput(event);\n          }}\n        />\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"IMDb URL\"\n          value={imdbUrl}\n          onChange={(event) => {\n            this.handleInput(event);\n          }}\n        />\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"IMDb ID\"\n          value={imdbId}\n          onChange={(event) => {\n            this.handleInput(event);\n          }}\n        />\n\n        <textarea\n          className=\"textarea\"\n          rows=\"5\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(event) => {\n            this.handleInput(event);\n          }}\n        />\n\n        <button\n          className=\"form-button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}